[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction ColorList() {\n  return (\n    <ul>\n      <li>red</li>\n      <li>blue</li>\n      <li>green</li>\n    </ul>\n  );\n}\n\nrender(<ColorList />)","type":"code","id":"k7je0"},{"content":"test('getby, queryby,  findby finding 0 elements', async () => {\n  render(<ColorList />);\n\n  // expect error cara 1\n  // jd expect untuk mendapatkan error, karena textbox tidak ada di dalam element\n  expect(() => screen.getByRole('textbox')).toThrow();\n\n  // expect error cara 2\n  // karena textbox tidak ada di dalam element\n  expect(() => screen.queryByRole('textbox')).toEqual(null);\n\n  // expect error cara 3\n  // karena textbox tidak ada di dalam element\n  let errorThrown = false;\n  try {\n    await screen.findByRole('textbox');\n  } catch (err) {\n    errorThrown = true;\n  }\n  expect(errorThrown).toEqual(true);\n});","type":"code","id":"xupye"},{"content":"test('getby, queryby,  findby find ` elements', async () => {\n  render(<ColorList />);\n\n  expect(\n    screen.getByRole('list')\n  ).toBeInTheDocument()\n\n  expect(\n    screen.queryByRole('list')\n  ).toBeInTheDocument()\n\n  expect(\n    await screen.findByRole('list')\n  ).toBeInTheDocument()\n\n});","type":"code","id":"o2m9q"},{"content":"test('getby, queryby,  findby find > 1 elements', async () => {\n  render(<ColorList />);\n\n  expect(() => screen.getByRole('listitem')).toThrow();\n  expect(() => screen.queryByRole('listitem')).toThrow();\n  expect(() => screen.queryByRole('listitem')).toThrow();\n});","type":"code","id":"c6koo"},{"content":"test('getAllBy, queryAllBy, findAllBy', async () => {\n  render(<ColorList />);\n\n  expect(\n    screen.getAllByRole('listitem')\n  ).toHaveLength(3)\n\n  expect(\n    screen.queryAllByRole('listitem')\n  ).toHaveLength(3)\n\n  expect(\n    await screen.findAllByRole('listitem')\n  ).toHaveLength(3)\n})","type":"code","id":"1lifg"}]